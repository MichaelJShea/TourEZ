// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourEZ.Models;

namespace TourEZ.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190328202003_migrate7")]
    partial class migrate7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TourEZ.Models.Event", b =>
                {
                    b.Property<int>("eventId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("created_at");

                    b.Property<DateTime>("endDate");

                    b.Property<DateTime>("endTime");

                    b.Property<string>("eventName");

                    b.Property<string>("location");

                    b.Property<int>("placeId");

                    b.Property<DateTime>("startDate");

                    b.Property<DateTime>("startTime");

                    b.Property<int?>("tripId");

                    b.HasKey("eventId");

                    b.HasIndex("placeId");

                    b.HasIndex("tripId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("TourEZ.Models.Group", b =>
                {
                    b.Property<int>("groupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.HasKey("groupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("TourEZ.Models.Hotel", b =>
                {
                    b.Property<int>("hotelId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("created_at");

                    b.Property<DateTime>("endDate");

                    b.Property<string>("location");

                    b.Property<int>("placeId");

                    b.Property<DateTime>("startDate");

                    b.Property<int>("tripId");

                    b.HasKey("hotelId");

                    b.HasIndex("placeId");

                    b.HasIndex("tripId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("TourEZ.Models.Member", b =>
                {
                    b.Property<int>("memberId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("groupId");

                    b.Property<int>("userId");

                    b.HasKey("memberId");

                    b.HasIndex("groupId");

                    b.HasIndex("userId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("TourEZ.Models.Place", b =>
                {
                    b.Property<int>("placeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address");

                    b.Property<string>("contactName");

                    b.Property<string>("email");

                    b.Property<double>("latitude");

                    b.Property<double>("longitude");

                    b.Property<string>("name");

                    b.Property<string>("phone");

                    b.Property<string>("website");

                    b.HasKey("placeId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("TourEZ.Models.Traveler", b =>
                {
                    b.Property<int>("travelerId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("tripId");

                    b.Property<int>("userId");

                    b.HasKey("travelerId");

                    b.HasIndex("tripId");

                    b.HasIndex("userId");

                    b.ToTable("Travelers");
                });

            modelBuilder.Entity("TourEZ.Models.Trip", b =>
                {
                    b.Property<int>("tripId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("endDate");

                    b.Property<int>("groupId");

                    b.Property<DateTime>("startDate");

                    b.Property<string>("tripName");

                    b.HasKey("tripId");

                    b.HasIndex("groupId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("TourEZ.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TourEZ.Models.Event", b =>
                {
                    b.HasOne("TourEZ.Models.Place", "placeInfo")
                        .WithMany("events")
                        .HasForeignKey("placeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TourEZ.Models.Trip")
                        .WithMany("events")
                        .HasForeignKey("tripId");
                });

            modelBuilder.Entity("TourEZ.Models.Hotel", b =>
                {
                    b.HasOne("TourEZ.Models.Place", "placeInfo")
                        .WithMany("hotels")
                        .HasForeignKey("placeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TourEZ.Models.Trip", "trip")
                        .WithMany("hotels")
                        .HasForeignKey("tripId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TourEZ.Models.Member", b =>
                {
                    b.HasOne("TourEZ.Models.Group", "group")
                        .WithMany("members")
                        .HasForeignKey("groupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TourEZ.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TourEZ.Models.Traveler", b =>
                {
                    b.HasOne("TourEZ.Models.Trip", "trip")
                        .WithMany()
                        .HasForeignKey("tripId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TourEZ.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TourEZ.Models.Trip", b =>
                {
                    b.HasOne("TourEZ.Models.Group", "group")
                        .WithMany("trips")
                        .HasForeignKey("groupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
